{"ast":null,"code":"var _jsxFileName = \"/home/kashyap_sri/Desktop/Shreyas/Money-Management/frontend/src/components/doughnut.js\",\n  _s = $RefreshSig$();\nimport react, { useState } from 'react';\nimport { Chart, ArcElement } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(ArcElement);\nexport default function Graph(props) {\n  _s();\n  let Other = 0;\n  let Investments = 0;\n  let Expenses = 0;\n  let Savings = 0;\n  for (let i = 0; i < props.data.length; i++) {\n    if (props.data[i].eType === 'other') {\n      Other += props.data[i].eAmount;\n    } else if (props.data[i].eType === 'Investments') {\n      Investments += props.data[i].eAmount;\n    } else if (props.data[i].eType === 'Expenses') {\n      Expenses += props.data[i].eAmount;\n    } else {\n      Savings += props.data[i].eAmount;\n    }\n  }\n  const total = Other + Investments + Expenses + Savings;\n  console.log(Investments, Savings, Expenses, Other, total);\n  let a = parseInt(Investments / total * 100);\n  let b = parseInt(Savings / total * 100);\n  let c = parseInt(Expenses / total * 100);\n  let d = parsOther / total * 100;\n  console.log(Savings / total * 100);\n  const [data, setData] = useState([0, 40, 60, 0]);\n  const config = {\n    data: {\n      datasets: [{\n        data: data,\n        backgroundColor: ['rgb(255,105,180)', 'rgb(0,255,255)', 'rgb(255, 99, 71)', 'rgb(255,255,0)']\n      }],\n      hoveroffset: 100\n    },\n    options: {\n      cutout: 150\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"doughnut\",\n    children: [/*#__PURE__*/_jsxDEV(Doughnut, {\n      ...config\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"total\",\n      children: [\"Total \", \"$\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Graph, \"c2/7sppbi7OKUAfYFPZzwckU01U=\");\n_c = Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["react","useState","Chart","ArcElement","Doughnut","axios","register","Graph","props","Other","Investments","Expenses","Savings","i","data","length","eType","eAmount","total","console","log","a","parseInt","b","c","d","parsOther","setData","config","datasets","backgroundColor","hoveroffset","options","cutout"],"sources":["/home/kashyap_sri/Desktop/Shreyas/Money-Management/frontend/src/components/doughnut.js"],"sourcesContent":["import react,{useState} from 'react'\nimport { Chart, ArcElement } from 'chart.js'\nimport { Doughnut } from 'react-chartjs-2';\nimport axios from 'axios';\nChart.register(ArcElement);\n\n\nexport default function Graph(props) {\n  let Other=0;\n  let Investments=0\n  let Expenses=0\n  let Savings=0\n  for(let i=0;i<props.data.length;i++){\n    if(props.data[i].eType==='other'){\n      Other+=props.data[i].eAmount;\n    }\n    else if(props.data[i].eType==='Investments'){\n      Investments+=props.data[i].eAmount;\n    }\n    else if(props.data[i].eType==='Expenses'){\n      Expenses+=props.data[i].eAmount;\n    }\n    else{\n      Savings+=props.data[i].eAmount;\n    }\n  }\n  const total=Other+Investments+Expenses+Savings\n  console.log(Investments,Savings,Expenses,Other,total)\n  let a=parseInt(Investments/total *100)\n  let b=parseInt(Savings/total *100)\n  let c=parseInt(Expenses/total *100)\n  let d=parsOther/total *100\n  console.log(Savings/total *100)\n \n\n  \n  const [data, setData]=useState([0, 40, 60, 0])\n  const config = {\n    data: {\n      datasets: [{\n        data: data,\n        backgroundColor: ['rgb(255,105,180)', 'rgb(0,255,255)', 'rgb(255, 99, 71)', 'rgb(255,255,0)']\n      }],\n      hoveroffset: 100\n    },\n    options: {\n      cutout: 150\n    }\n  }\n  return (\n\n    <div className=\"doughnut\">\n      <Doughnut {...config}></Doughnut>\n      <h4 className='total'>Total {}$</h4>\n    </div>\n  )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,SAASC,KAAK,EAAEC,UAAU,QAAQ,UAAU;AAC5C,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,OAAOC,KAAK,MAAM,OAAO;AAAC;AAC1BH,KAAK,CAACI,QAAQ,CAACH,UAAU,CAAC;AAG1B,eAAe,SAASI,KAAK,CAACC,KAAK,EAAE;EAAA;EACnC,IAAIC,KAAK,GAAC,CAAC;EACX,IAAIC,WAAW,GAAC,CAAC;EACjB,IAAIC,QAAQ,GAAC,CAAC;EACd,IAAIC,OAAO,GAAC,CAAC;EACb,KAAI,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,GAACL,KAAK,CAACM,IAAI,CAACC,MAAM,EAACF,CAAC,EAAE,EAAC;IAClC,IAAGL,KAAK,CAACM,IAAI,CAACD,CAAC,CAAC,CAACG,KAAK,KAAG,OAAO,EAAC;MAC/BP,KAAK,IAAED,KAAK,CAACM,IAAI,CAACD,CAAC,CAAC,CAACI,OAAO;IAC9B,CAAC,MACI,IAAGT,KAAK,CAACM,IAAI,CAACD,CAAC,CAAC,CAACG,KAAK,KAAG,aAAa,EAAC;MAC1CN,WAAW,IAAEF,KAAK,CAACM,IAAI,CAACD,CAAC,CAAC,CAACI,OAAO;IACpC,CAAC,MACI,IAAGT,KAAK,CAACM,IAAI,CAACD,CAAC,CAAC,CAACG,KAAK,KAAG,UAAU,EAAC;MACvCL,QAAQ,IAAEH,KAAK,CAACM,IAAI,CAACD,CAAC,CAAC,CAACI,OAAO;IACjC,CAAC,MACG;MACFL,OAAO,IAAEJ,KAAK,CAACM,IAAI,CAACD,CAAC,CAAC,CAACI,OAAO;IAChC;EACF;EACA,MAAMC,KAAK,GAACT,KAAK,GAACC,WAAW,GAACC,QAAQ,GAACC,OAAO;EAC9CO,OAAO,CAACC,GAAG,CAACV,WAAW,EAACE,OAAO,EAACD,QAAQ,EAACF,KAAK,EAACS,KAAK,CAAC;EACrD,IAAIG,CAAC,GAACC,QAAQ,CAACZ,WAAW,GAACQ,KAAK,GAAE,GAAG,CAAC;EACtC,IAAIK,CAAC,GAACD,QAAQ,CAACV,OAAO,GAACM,KAAK,GAAE,GAAG,CAAC;EAClC,IAAIM,CAAC,GAACF,QAAQ,CAACX,QAAQ,GAACO,KAAK,GAAE,GAAG,CAAC;EACnC,IAAIO,CAAC,GAACC,SAAS,GAACR,KAAK,GAAE,GAAG;EAC1BC,OAAO,CAACC,GAAG,CAACR,OAAO,GAACM,KAAK,GAAE,GAAG,CAAC;EAI/B,MAAM,CAACJ,IAAI,EAAEa,OAAO,CAAC,GAAC1B,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM2B,MAAM,GAAG;IACbd,IAAI,EAAE;MACJe,QAAQ,EAAE,CAAC;QACTf,IAAI,EAAEA,IAAI;QACVgB,eAAe,EAAE,CAAC,kBAAkB,EAAE,gBAAgB,EAAE,kBAAkB,EAAE,gBAAgB;MAC9F,CAAC,CAAC;MACFC,WAAW,EAAE;IACf,CAAC;IACDC,OAAO,EAAE;MACPC,MAAM,EAAE;IACV;EACF,CAAC;EACD,oBAEE;IAAK,SAAS,EAAC,UAAU;IAAA,wBACvB,QAAC,QAAQ;MAAA,GAAKL;IAAM;MAAA;MAAA;MAAA;IAAA,QAAa,eACjC;MAAI,SAAS,EAAC,OAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAe;EAAA;IAAA;IAAA;IAAA;EAAA,QAChC;AAEV;AAAC,GAjDuBrB,KAAK;AAAA,KAALA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}